def codificador(mensaje) -> str:
    # Separamos el mensaje por espacios
    mensajeSpliteado = mensaje.split(" ")
    mensajeCodificado = ""
    diccionario = {
        'A': 'ğŸ¤š',
        'B': 'ğŸ¤šğŸ¤š',
        'C': 'ğŸ¤šğŸ¤šğŸ¤š',
        'D': 'ğŸ¤šâœ‹',
        'E': 'âœ‹',
        'F': 'âœ‹ğŸ¤š',
        'G': 'âœ‹ğŸ¤šğŸ¤š',
        'H': 'âœ‹ğŸ¤šğŸ¤šğŸ¤š',
        'I': 'ğŸ¤šğŸ‘Š',
        'J': 'ğŸ‘Š',
        'K': 'ğŸ‘ŠğŸ¤š',
        'L': 'ğŸ‘ŠğŸ¤šğŸ¤š',
        'M': 'ğŸ‘ŠğŸ¤šğŸ¤šğŸ¤š',
        'N': 'ğŸ‘ŠğŸ¤šâœ‹',
        'O': 'ğŸ‘Šâœ‹ğŸ¤š',
        'P': 'ğŸ‘Šâœ‹ğŸ¤šğŸ¤š',
        'Q': 'ğŸ‘Šâœ‹ğŸ¤šğŸ¤šğŸ¤š',
        'R': 'ğŸ¤šğŸ‘ŠğŸ‘Š',
        'S': 'ğŸ‘ŠğŸ‘Š',
        'T': 'ğŸ‘ŠğŸ‘ŠğŸ¤š',
        'U': 'ğŸ‘ŠğŸ‘ŠğŸ¤šğŸ¤š',
        'V': 'ğŸ‘ŠğŸ‘ŠğŸ¤šğŸ¤šğŸ¤š',
        'W': 'ğŸ‘ŠğŸ‘ŠğŸ¤šâœ‹',
        'X': 'ğŸ‘ŠğŸ‘Šâœ‹',
        'Y': 'ğŸ‘ŠğŸ‘Šâœ‹ğŸ¤š',
        'Z': 'ğŸ‘ŠğŸ‘Šâœ‹ğŸ¤šğŸ¤š',
        ',': ',',
        '.':'Â·',
        '1': '(ğŸ¤š)i',
        '2': '(ğŸ¤šğŸ¤š)i',
        '3': '(ğŸ¤šğŸ¤šğŸ¤š)i',
        '4': '(ğŸ¤šâœ‹)i',
        '5': '(âœ‹)i',
        '6': '(âœ‹ğŸ¤š)i',
        '7': '(âœ‹ğŸ¤šğŸ¤š)i',
        '8': '(âœ‹ğŸ¤šğŸ¤šğŸ¤š)i',
        '9': '(ğŸ¤šğŸ‘Š)i',
        '0': '(ğŸ‘Š)i'
    }
    for texto in mensajeSpliteado:
        cadenaCodificada = ""
        for letra in range(len(texto)):
            caracter = texto[letra].upper()
            cadenaCodificada += diccionario[caracter]
            if ((letra + 1) < len(texto)):
                cadenaCodificada += " "
        mensajeCodificado += cadenaCodificada 
        if texto != mensajeSpliteado[-1]:
           mensajeCodificado += "  "

    return mensajeCodificado


def decodificador(mensaje) -> str:
    diccionario_invertido = {
        'ğŸ¤š': 'A',
        'ğŸ¤šğŸ¤š': 'B',
        'ğŸ¤šğŸ¤šğŸ¤š': 'C',
        'ğŸ¤šâœ‹': 'D',
        'âœ‹': 'E',
        'âœ‹ğŸ¤š': 'F',
        'âœ‹ğŸ¤šğŸ¤š': 'G',
        'âœ‹ğŸ¤šğŸ¤šğŸ¤š': 'H',
        'ğŸ¤šğŸ‘Š': 'I',
        'ğŸ‘Š': 'J',
        'ğŸ‘ŠğŸ¤š': 'K',
        'ğŸ‘ŠğŸ¤šğŸ¤š': 'L',
        'ğŸ‘ŠğŸ¤šğŸ¤šğŸ¤š': 'M',
        'ğŸ‘ŠğŸ¤šâœ‹': 'N',
        'ğŸ‘Šâœ‹ğŸ¤š': 'O',
        'ğŸ‘Šâœ‹ğŸ¤šğŸ¤š': 'P',
        'ğŸ‘Šâœ‹ğŸ¤šğŸ¤šğŸ¤š': 'Q',
        'ğŸ¤šğŸ‘ŠğŸ‘Š': 'R',
        'ğŸ‘ŠğŸ‘Š': 'S',
        'ğŸ‘ŠğŸ‘ŠğŸ¤š': 'T',
        'ğŸ‘ŠğŸ‘ŠğŸ¤šğŸ¤š': 'U',
        'ğŸ‘ŠğŸ‘ŠğŸ¤šğŸ¤šğŸ¤š': 'V',
        'ğŸ‘ŠğŸ‘ŠğŸ¤šâœ‹': 'W',
        'ğŸ‘ŠğŸ‘Šâœ‹': 'X',
        'ğŸ‘ŠğŸ‘Šâœ‹ğŸ¤š': 'Y',
        'ğŸ‘ŠğŸ‘Šâœ‹ğŸ¤šğŸ¤š': 'Z',
        ',': ',',
        'Â·': '.',
        '(ğŸ¤š)i':'1',
        '(ğŸ¤šğŸ¤š)i':'2',
        '(ğŸ¤šğŸ¤šğŸ¤š)i':'3',
        '(ğŸ¤šâœ‹)i':'4',
        '(âœ‹)i':'5',
        '(âœ‹ğŸ¤š)i':'6',
        '(âœ‹ğŸ¤šğŸ¤š)i':'7',
        '(âœ‹ğŸ¤šğŸ¤šğŸ¤š)i':'8',
        '(ğŸ¤šğŸ‘Š)i':'9',
        '(ğŸ‘Š)i':'0'
    }
    
    palabras = mensaje.split("  ")  # separar palabras
    mensajeDecodificado = []
    
    for palabra in palabras:
        letras_codificadas = palabra.split(" ")  # separar letras
        palabraDecodificada = ""
        for simbolo in letras_codificadas:
            if simbolo:  # ignorar vacÃ­os
                letra = diccionario_invertido.get(simbolo)
                if letra:  # ignorar sÃ­mbolos desconocidos
                    palabraDecodificada += letra
        mensajeDecodificado.append(palabraDecodificada)
    
    return " ".join(mensajeDecodificado).lower()


def main():
    opcion = True
    while opcion:
        mensaje = input("Introduce un mensaje (No incluir numeros, funcion no implementada):\n")
        try:
            print("Mensaje codificado:", codificador(mensaje))
            print("Mensaje decodificado:", decodificador(codificador(mensaje)))
            continuar = input("Desea continuar: S/N: ")
            while True:
                if continuar.lower() == "s": 
                    break
                elif continuar.lower() == "n": 
                    opcion = False
                    break
                else:  
                    continuar = input("Opcion ingresada no valida, introduce una opcion valida: S/N: ")
        except Exception as e:
            print(f"No se ha podido codificar el mensaje: {mensaje}. Error: {e}")

    return None


if __name__ == "__main__":
    main()

    